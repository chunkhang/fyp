include "environment.conf"

play {
  http {
    filters = filters.Filters
    secret.key = ${environment.applicationSecret}
  }
  mailer {
    host = "smtp.gmail.com"
    port = 587
    ssl = no
    tls = yes
    user = ${environment.emailUser}
    password = ${environment.emailPassword}
    name = "Class Activity Management System"
    mock = no
    email.dev = "13079272@imail.sunway.edu.my"
  }
  filters.headers.contentSecurityPolicy = "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data:"
  modules.enabled += "play.modules.reactivemongo.ReactiveMongoModule"
}

mongodb {
  uri = "mongodb://localhost:27017/fyp"
}

my {
  auth {
    baseUrl = "https://login.microsoftonline.com/organizations/oauth2/v2.0"
    logonUrl = ${my.auth.baseUrl}"/authorize"
    tokenUrl = ${my.auth.baseUrl}"/token"
    clientId = ${environment.clientId}
    clientSecret = ${environment.clientSecret}
    responseType = "code"
    scope = "User.Read offline_access"
    prompt = "login"
    grantType = "authorization_code"
    authUri = "http://localhost:9000/auth/authenticate"
  }
  api {
    microsoft {
      baseUrl = "https://graph.microsoft.com/v1.0"
      userUrl = ${my.api.microsoft.baseUrl}"/me"
    }
    icheckin {
      baseUrl = "http://localhost:5000"
      classUrl = ${my.api.icheckin.baseUrl}"/classes"
      venueUrl = ${my.api.icheckin.baseUrl}"/venues"
    }
  }
  db {
    maxDocuments = 500
  }
  domain {
    lecturer = "imail.sunway.edu.my"
    student = "imail.sunway.edu.my"
  }
}

